/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_keypair_free: (a: number, b: number) => void;
export const keypair_new: (a: number, b: number, c: number, d: number) => number;
export const keypair_pubkey: (a: number) => [number, number];
export const keypair_privkey: (a: number) => [number, number];
export const keypair_set_pubkey: (a: number, b: number, c: number) => void;
export const keypair_set_privkey: (a: number, b: number, c: number) => void;
export const __wbg_did_free: (a: number, b: number) => void;
export const did_new: (a: number, b: number) => number;
export const did_id: (a: number) => [number, number];
export const did_set_id: (a: number, b: number, c: number) => void;
export const __wbg_encrypteddata_free: (a: number, b: number) => void;
export const encrypteddata_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const encrypteddata_pubkey_from: (a: number) => [number, number];
export const encrypteddata_pubkey_to: (a: number) => [number, number];
export const encrypteddata_data: (a: number) => [number, number];
export const encrypteddata_nonce: (a: number) => [number, number];
export const __wbg_tx_free: (a: number, b: number) => void;
export const tx_new: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number, i: number, j: number, k: number, l: number) => number;
export const tx_coin: (a: number) => [number, number];
export const tx_from: (a: number) => [number, number];
export const tx_to: (a: number) => [number, number];
export const tx_amount: (a: number) => [number, number];
export const tx_fee: (a: number) => [number, number];
export const tx_data: (a: number) => [number, number];
export const tx_set_coin: (a: number, b: number, c: number) => void;
export const tx_set_from: (a: number, b: number, c: number) => void;
export const tx_set_to: (a: number, b: number, c: number) => void;
export const tx_set_amount: (a: number, b: number, c: number) => void;
export const tx_set_fee: (a: number, b: number, c: number) => void;
export const tx_set_data: (a: number, b: number, c: number) => void;
export const create_keypair: () => number;
export const key_to_did: (a: number, b: number) => number;
export const did_to_key: (a: number) => [number, number];
export const encrypt: (a: number, b: number, c: number, d: number) => number;
export const decrypt: (a: number, b: number, c: number) => [number, number];
export const sign: (a: number, b: number, c: number, d: number) => [number, number];
export const verify: (a: number, b: number, c: number, d: number, e: number, f: number) => number;
export const sha256: (a: number, b: number) => [number, number];
export const ecdh: (a: number, b: number, c: number, d: number) => [number, number];
export const __wbgt__core::tests::wasm::encrypt_decrypt: (a: number) => void;
export const __wbgt__core::tests::wasm::did_conversion: (a: number) => void;
export const __wbgt__core::tests::wasm::sign_verify: (a: number) => void;
export const __wbgt__core::tests::wasm::sha256_hash: (a: number) => void;
export const __wbgt__core::tests::wasm::ecdh_shared_secret: (a: number) => void;
export const rustsecp256k1_v0_10_0_context_create: (a: number) => number;
export const rustsecp256k1_v0_10_0_context_destroy: (a: number) => void;
export const rustsecp256k1_v0_10_0_default_illegal_callback_fn: (a: number, b: number) => void;
export const rustsecp256k1_v0_10_0_default_error_callback_fn: (a: number, b: number) => void;
export const __wbg_wasmbindgentestcontext_free: (a: number, b: number) => void;
export const wasmbindgentestcontext_new: () => number;
export const wasmbindgentestcontext_include_ignored: (a: number, b: number) => void;
export const wasmbindgentestcontext_filtered_count: (a: number, b: number) => void;
export const wasmbindgentestcontext_run: (a: number, b: number, c: number) => any;
export const __wbgtest_console_log: (a: any) => void;
export const __wbgtest_console_debug: (a: any) => void;
export const __wbgtest_console_info: (a: any) => void;
export const __wbgtest_console_warn: (a: any) => void;
export const __wbgtest_console_error: (a: any) => void;
export const __wbgtest_cov_dump: () => [number, number];
export const __externref_table_alloc: () => number;
export const __wbindgen_export_1: WebAssembly.Table;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __wbindgen_export_5: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const closure118_externref_shim: (a: number, b: number, c: any) => void;
export const wasm_bindgen__convert__closures__invoke0_mut__h90d8afc0483c2769: (a: number, b: number) => void;
export const closure131_externref_shim: (a: number, b: number, c: any, d: number, e: any) => void;
export const closure135_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_start: () => void;
