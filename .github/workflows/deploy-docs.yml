name: Deploy docs

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "docs/**"
      - .github/workflows/deploy-docs.yml

jobs:
  build-and-deploy:
    name: Deploy docs
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Setup Node.js üîß
        uses: actions/setup-node@v4
        with:
          node-version: "18.18.1"
          cache: npm
          cache-dependency-path: docs/package-lock.json

      - name: Setting up environment variables
        run: |
          jq -r 'to_entries|map("\(.key)=\(.value|tostring)")|.[]' <<< $SECRETS_CONTEXT > .env
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: Build üîß
        id: build
        run: |
          cd docs
          npm install --frozen-lockfile
          npm run build

      - name: AWS Credentials setup üîß
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: S3 bucket update üöÄ
        run: |
          aws s3 cp --recursive --region ap-southeast-1 docs/build "s3://$AWS_S3_BUCKET_NAME"
        env:
          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}

      - name: CloudFront cache update üöÄ
        run: |
          aws cloudfront create-invalidation --distribution-id "$AWS_CLOUDFRONT_DISTRIBUTION_ID" --paths "/*"
        env:
          AWS_CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
