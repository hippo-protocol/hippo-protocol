# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Build
        run: make build

  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Test
        run: |
          go test -coverpkg=$(go list ./... | grep -v "/test/e2e") $(go list ./... | grep -v "/test/e2e") -v
          go test $(go list ./... | grep -v "/test/e2e") -coverprofile=cover.out
          go tool cover -func=cover.out

          coverage=$(go tool cover -func=cover.out | awk '/total:/ {print $3}' | sed 's/%//' | awk '{print $1}')
          threshold=80

          if [[ -z "$coverage" ]]; then
          echo "Error:Could not extract coverage percentage."
          exit 1
          fi

          if (( $(echo $(printf "%.0f" "$coverage") ) < $threshold )); then
          echo "Error:Coverage is below threshold ($coverage% < $threshold%)"
          exit 1

          else
          echo "Coverage is $coverage%, which meets the threshold ($threshold%)"
          fi

  e2e-genesis-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23"

      - name: Genesis Node Start
        run: |
          go run hippod/main.go init hippo --chain-id hippo-protocol-testnet-1
          echo -e "password\npassword" | go run hippod/main.go keys add alice --keyring-backend file
          echo -e "password" | go run hippod/main.go genesis add-genesis-account alice 1084734273380000000000000000ahp --keyring-backend file
          echo -e "password" | go run hippod/main.go genesis gentx alice 1000000000000000000ahp --chain-id hippo-protocol-testnet-1 --keyring-backend file
          go run hippod/main.go genesis collect-gentxs
          go run hippod/main.go start &
          while ! nc -z localhost 26657; do # Or your node's RPC port
            echo "Waiting for node to start..."
            sleep 1
          done
          echo "Node started."

      - name: Run Command Test # Ensure all the commands pass.
        run: |
          go test ./test/e2e -v

      - name: Cleanup - Stop Node
        if: always() # Ensure cleanup runs even if tests fail.
        run: |
          pkill -f "go run hippod/main.go start"
